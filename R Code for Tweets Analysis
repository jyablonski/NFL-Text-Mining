library(tidytext)
library(tidyverse)
library(rtweet)
library(igraph)
library(ggraph)
library(widyr)
library(wordcloud)
library(reshape2)
library(extrafont)
library(magick)
library(scales)

# adjust keyword variable & create system date.
keyword <- '#SuperBowlLIV'
dateVariable <- Sys.Date()

# custom theme
theme_jacob <- function () { 
  theme_minimal(base_size=9, base_family="Gill Sans MT") %+replace% 
    theme(
      panel.grid.minor = element_blank(),
      plot.background = element_rect(fill = 'floralwhite', color = 'floralwhite')
    )
}

# OPTION 1 Searching New Tweets ----
tweets <- search_tweets(q = keyword, n = 18000,
                        lang = "en",
                        include_rts = FALSE)

write.csv(tweets$text, file = paste(keyword, ' Tweets.csv', sep = ""))

# OPTION 2 Load a saved CSV file ----
# tweets <- read_csv('Chiefs tweets.csv')

# tweets <- tweets %>%
  # select(x) %>%
  # rename(text = x)
# Cleaning Tweets ----
tweets$stripped_text <- gsub("http.*","",  tweets$text)
tweets$stripped_text <- gsub("https.*","", tweets$stripped_text)

tweets <- tweets %>%
  mutate_at(c("stripped_text"), gsub("http.*","",.))

tweets_clean <- tweets %>%
  dplyr::select(stripped_text) %>%
  unnest_tokens(word, stripped_text)

# a lot of stop words in the top 15 
tweets_clean %>%
  count(word, sort = TRUE) %>%
  top_n(15) %>%
  mutate(word = reorder(word, n)) %>%
  ggplot(aes(x = word, y = n)) +
  geom_col() +
  xlab(NULL) +
  coord_flip() +
  labs(x = "Count",
       y = "Unique words",
       title = "Count of unique words found in tweets") +
  theme_jacob()

# filter out the stop words (in, of, as, the etc.)
data(stop_words)
head(stop_words)
nrow(tweets_clean)

cleaned_words <- tweets_clean %>%
  anti_join(stop_words)
nrow(cleaned_words)

# top 25words graph - Picture 1
cleaned_words %>%
  count(word, sort = TRUE) %>%
  top_n(25) %>%
  mutate(word = reorder(word, n)) %>%
  ggplot(aes(x = word, y = n)) +
  geom_col() +
  xlab(NULL) +
  coord_flip() +
  labs(y = "Count",
       x = "Unique words",
       title = paste("Top 25 Most Popular Words in Tweets related to ", keyword, sep = ""),
       subtitle = paste("Twitter Text Mining with ", keyword, sep = ""),
       caption = paste('Data collected via rTweet package in R on ', dateVariable, sep = "")) +
  theme_jacob()
ggsave("rnflTop25.png", width = 9, height = 4)

# looking at paired words in tweets - bigrams
tweets_bigram <- tweets %>%
  dplyr::select(stripped_text) %>%
  unnest_tokens(bigram, stripped_text, token = "ngrams", n = 2)

bigrams_separated <- tweets_bigram %>%
  filter(!str_detect(bigram, 'azzayak')) %>%
  filter(!str_detect(bigram, 'kptreyfive')) %>%
  filter(!str_detect(bigram, 'vinceschilling')) %>%
  separate(bigram, c("word1", "word2"), sep = " ")

bigrams_filtered <- bigrams_separated %>%
  filter(!word1 %in% stop_words$word) %>%
  filter(!word2 %in% stop_words$word)

bigram_counts <- bigrams_filtered %>%
  count(word1, word2, sort = TRUE)

head(bigram_counts)

bigrams_united <- bigrams_filtered %>%
  unite(bigram, word1, word2, sep = " ")

# Word Network Graph - Picture 2
bigram_counts %>%
  filter(n >= 44) %>%
  graph_from_data_frame() %>%
  ggraph(layout = "fr") +
  geom_node_point(color = "darkslategray4", size = 3) +
  geom_node_text(aes(label = name), vjust = 1.8, size = 3) +
  labs(title = paste("Most Popular Word Pairs in Tweets related to ", keyword, sep = ""),
       subtitle = paste("Twitter Text Mining with ", keyword, sep = ""),
       caption = paste('Data collected via rTweet package in R on ', dateVariable, sep = ""),
       x = "", y = "") +
  theme_jacob()
ggsave("rnflWordPairs.png", width = 9, height = 4)

# filter out any noticeable sentiment word that is out of place here ----
bing_word_counts <- cleaned_words %>%
  inner_join(get_sentiments("bing")) %>%
  count(word, sentiment, sort = TRUE) %>%
  ungroup()

# Top 15 Graph for each Sentiment - Picture 3
bing_word_counts %>%
  group_by(sentiment) %>%
  top_n(15) %>%
  ungroup() %>%
  mutate(word = reorder(word, n)) %>%
  ggplot(aes(word, n, fill = sentiment)) +
  geom_col(show.legend = FALSE) +
  facet_wrap(~sentiment, scales = "free_y") +
  labs(y = "Top 15 Most Popular Words Tweeted by Each Sentiment",
       x = NULL, 
       caption = paste('Data collected via rTweet package in R on ', dateVariable, sep = ""))  +
  coord_flip() +
  theme_jacob()
ggsave("rnfltweets.png", width = 9, height = 4)

# Top 15 Graph for each Sentiment - Picture 3 TRY 2 EXCLUDING the word super
bing_word_counts %>%
  filter(!str_detect(word, 'super')) %>%
  group_by(sentiment) %>%
  top_n(15) %>%
  ungroup() %>%
  mutate(word = reorder(word, n)) %>%
  ggplot(aes(word, n, fill = sentiment)) +
  geom_col(show.legend = FALSE) +
  facet_wrap(~sentiment, scales = "free_y") +
  labs(y = "Top 15 Most Popular Words Tweeted by Each Sentiment",
       x = NULL, 
       caption = paste('Data collected via rTweet package in R on ', dateVariable, sep = ""))  +
  coord_flip() +
  theme_jacob()
ggsave("rchiefsSentiment.png", width = 9, height = 4)

# Wordcloud w/ Keyword - Picture 4
cleaned_words %>%
  count(word) %>%
  with(wordcloud(word, n, max.words = 50))
ggsave("rnflComparison2.png", width = 9, height = 4)

# Comparison Cloud Wordcloud - Positives on bottom, negatives on top - Picture 5
cleaned_words %>%
  inner_join(get_sentiments("bing")) %>%
  count(word, sentiment, sort = TRUE) %>%
  acast(word ~ sentiment, value.var = "n", fill = 0) %>%
  comparison.cloud(colors = c("gray20", "gray80"),
                   max.words = 100) +
  theme_jacob()
ggsave("rnflcomparison.png", width = 9, height = 4)

# color wordcloud Picture 6
cleaned_words %>%
  count(word, sort = TRUE) %>%
  ungroup() %>%
  head(50) %>%
  with(wordcloud(word, n, max.words = 50, colors = brewer.pal(8, 'Dark2')))
ggsave("rnflWordcloud1.png", width = 9, height = 4)

# word Counts
word_counts <- cleaned_words %>%
  count(word,sort = TRUE) %>%
  mutate(total = sum(n))

# Frequency of word counts
freq_by_rank <- word_counts %>% 
  mutate(rank = row_number(), 
         `term frequency` = n/total)
freq_by_rank
head(freq_by_rank, 6) # top 6 words include ~19 of all data
top6 <- sum(head(freq_by_rank$`term frequency`, 6)) * 100
cat("Top 6 Words represent ", top6, "% of the entire dataset", sep = "" )

# Logarithmic Frequency Picture 7
freq_by_rank %>% 
  ggplot(aes(rank, `term frequency`)) + 
  geom_abline(intercept = -0.62, slope = -1.1, color = "gray50", linetype = 2) +
  geom_line(size = 1.1, alpha = 0.8, show.legend = FALSE) + 
  scale_x_log10() +
  scale_y_continuous(labels = function(x) sprintf("%g", x)) +
  labs(title = paste("Top 15 Most Popular Words in Tweets related to #", keyword, sep = ""),
       subtitle = paste("Twitter Text Mining with #", keyword, sep = ""),
       caption = paste('Data collected via rTweet package in R on ', dateVariable, sep = "")) +
  xlab('Word Rank') +
  ylab('Term Frequency') +
  theme_jacob()
ggsave("rnflLog.png", width = 9, height = 4)

# Trigram tweets ----
trigram_tweets <- tweets %>%
  dplyr::select(stripped_text) %>%
  unnest_tokens(trigram, stripped_text, token = "ngrams", n = 3) %>%
  separate(trigram, c("word1", "word2", "word3"), sep = " ") %>%
  filter(!word1 %in% stop_words$word,
         !word2 %in% stop_words$word,
         !word3 %in% stop_words$word) %>%
  count(word1, word2, word3, sort = TRUE)

AFINN <- get_sentiments("afinn")
AFINN

not_words <- bigrams_separated %>%
  filter(word1 == "not") %>%
  inner_join(AFINN, by = c(word2 = "word")) %>%
  count(word2, value, sort = TRUE)
not_words %>%
  mutate(contribution = n * value) %>%
  arrange(desc(abs(contribution))) %>%
  head(20) %>%
  mutate(word2 = reorder(word2, contribution)) %>%
  ggplot(aes(word2, n * value, fill = n * value > 0)) +
  geom_col(show.legend = FALSE) +
  xlab("Words preceded by \"not\"") +
  ylab("Sentiment value * number of occurrences") +
  coord_flip() +
  theme_jacob()
ggsave("rnflNot.png", width = 9, height = 4)

negation_words <- c("not", "no", "never", "without")

negated_words <- bigrams_separated %>%
  filter(word1 %in% negation_words) %>%
  inner_join(AFINN, by = c(word2 = "word")) %>%
  count(word1, word2, value, sort = TRUE)

bigram_graph <- bigram_counts %>%
  filter(n > 120) %>%
  filter(!str_detect(word1, 'azzayak')) %>%
  filter(!str_detect(word1, 'kptreyfive')) %>%
  filter(!str_detect(word1, 'vinceschilling')) %>%
  filter(!str_detect(word2, 'azzayak')) %>%
  filter(!str_detect(word2, 'kptreyfive')) %>%
  filter(!str_detect(word2, 'vinceschilling')) %>%
  graph_from_data_frame()

bigram_graph
set.seed(2017)

ggraph(bigram_graph, layout = "fr") +
  geom_edge_link() +
  geom_node_point() +
  geom_node_text(aes(label = name), vjust = 1, hjust = 1)

ggsave("rnflpointer.png", width = 15, height = 7)

set.seed(2016)

a <- grid::arrow(type = "closed", length = unit(.15, "inches"))

ggraph(bigram_graph, layout = "fr") +
  geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
                 arrow = a, end_cap = circle(.07, 'inches')) +
  geom_node_point(color = "lightblue", size = 5) +
  geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
  theme_void()
ggsave('rnflpointer2.png', width = 15, height = 7)
